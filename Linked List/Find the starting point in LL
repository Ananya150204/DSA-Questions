Given the head of a linked list, return the node where the cycle begins. If there is no cycle, return null.
Code :
ListNode *detectCycle(ListNode *head) {
       if (head == nullptr || head->next == nullptr){
        return nullptr;
       }
       ListNode* slow = head;
       ListNode* fast = head;
       while (fast != nullptr && fast->next != nullptr){
        slow = slow->next;
        fast = fast->next->next;
        if (slow == fast){
            slow = head;
            while (slow != fast){
                slow = slow->next;
                fast = fast->next;
            }
            return slow;
        }
       }
       return nullptr;
    }
