Given a doubly linked list of n elements. Your task is to reverse the doubly linked list in-place.
Code :
struct Node
{
    int data;
    Node * next;
    Node * prev;
    Node (int x)
    {
        data=x;
        next=NULL;
        prev=NULL;
    }
        
};
class Solution
{
    public:
    Node* reverseDLL(Node * head)
    {
        //Your code here
        if (head == nullptr || head->next == nullptr){
            return head;
        }
        Node* curr = head;
        Node* last = nullptr;
        while (curr != nullptr){
            // Swap the two links
            last = curr->prev;
            curr->prev = curr->next;
            curr->next = last;
            // Move
            curr = curr->prev;
        }
        return last->prev;
    }
};
