Given an input string s, reverse the order of the words.
A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.
Return a string of the words in reverse order concatenated by a single space.
Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.
Example 1:
Input: s = "the sky is blue"
Output: "blue is sky the"
Example 2:
Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.
Example 3:
Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.
Constraints:
1 <= s.length <= 10^4
s contains English letters (upper-case and lower-case), digits, and spaces ' '.
There is at least one word in s.
Code :
string reverseWords(string s) {
        reverse(s.begin(),s.end());
        int n = s.size();
        int i = 0;
        int l = 0; // left end of word
        int r = 0; // 1 ahead of right end
        while (i < n){
            while (i < n && s[i] != ' '){ // jab tak space nahi aata
                s[r++] = s[i++];
            }
            if (l < r){ // l == r one letter word
                reverse(s.begin() + l, s.begin()+r);
                s[r++] = ' '; // Important
                l = r; // Forgot
            }
            i++;
        }
        return s.substr(0,r-1);
    }
