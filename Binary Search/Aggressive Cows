You are given an array 'arr' consisting of 'n' integers which denote the position of a stall.
You are also given an integer 'k' which denotes the number of aggressive cows.
You are given the task of assigning stalls to 'k' cows such that the minimum distance between any two of them is the maximum possible.
Print the maximum possible minimum distance.

Code :
#include <climits>
bool isPossible(vector<int> &stalls, int mid, int k){
    int numCows = 1;
    int n = stalls.size();
    int coord = stalls[0];
    for (int i = 0; i < n-1; i++){
        // U need to track the difference of distance between current stall and
        // last placed cow
        if (stalls[i+1]-coord >= mid){
            numCows = numCows + 1;
            coord = stalls[i+1];
            if (numCows >= k){
                return true;
            } 
        }
    }
    if (numCows >= k){
        return true;
    }
    return false;
}
int aggressiveCows(vector<int> &stalls, int k)
{
    sort (stalls.begin(),stalls.end());
    int start = 1;
    int end = 0;
    int n = stalls.size();
    for (int i = 0; i < n; i++){
        //start = min(start,stalls[i+1]-stalls[i]);
        end = end + stalls[i];
    }
    while (start <= end){
        int mid = start + (end-start)/2; // keep a min distance of mid
        if (isPossible(stalls,mid,k)){
            start = mid + 1;
        }
        else {
            end = mid - 1;
        }
    }
    return end;
}
